import {
  jsx,
  keyframes,
  useTheme
} from "./chunk-CYAK5BZ7.js";
import {
  require_react
} from "./chunk-NTFE6N72.js";
import {
  __toESM
} from "./chunk-TWLJ45QX.js";

// node_modules/@theme-ui/css/dist/theme-ui-css.esm.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var THEME_UI_DEFAULT_KEY = "__default";
var hasDefault = function hasDefault2(x) {
  return typeof x === "object" && x !== null && THEME_UI_DEFAULT_KEY in x;
};
function get(obj, path, fallback, p, undef) {
  var pathArray = path && typeof path === "string" ? path.split(".") : [path];
  for (p = 0; p < pathArray.length; p++) {
    obj = obj ? obj[pathArray[p]] : undef;
  }
  if (obj === undef)
    return fallback;
  return hasDefault(obj) ? obj[THEME_UI_DEFAULT_KEY] : obj;
}
var getObjectWithVariants = function getObjectWithVariants2(obj, theme) {
  if (obj && obj["variant"]) {
    var result = {};
    for (var key in obj) {
      var x = obj[key];
      if (key === "variant") {
        var val = typeof x === "function" ? x(theme) : x;
        var variant = getObjectWithVariants2(get(theme, val), theme);
        result = _extends({}, result, variant);
      } else {
        result[key] = x;
      }
    }
    return result;
  }
  return obj;
};
var defaultBreakpoints = [40, 52, 64].map(function(n) {
  return n + "em";
});
var defaultTheme = {
  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],
  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]
};
var aliases = {
  bg: "backgroundColor",
  m: "margin",
  mt: "marginTop",
  mr: "marginRight",
  mb: "marginBottom",
  ml: "marginLeft",
  mx: "marginX",
  my: "marginY",
  p: "padding",
  pt: "paddingTop",
  pr: "paddingRight",
  pb: "paddingBottom",
  pl: "paddingLeft",
  px: "paddingX",
  py: "paddingY"
};
var multiples = {
  marginX: ["marginLeft", "marginRight"],
  marginY: ["marginTop", "marginBottom"],
  paddingX: ["paddingLeft", "paddingRight"],
  paddingY: ["paddingTop", "paddingBottom"],
  scrollMarginX: ["scrollMarginLeft", "scrollMarginRight"],
  scrollMarginY: ["scrollMarginTop", "scrollMarginBottom"],
  scrollPaddingX: ["scrollPaddingLeft", "scrollPaddingRight"],
  scrollPaddingY: ["scrollPaddingTop", "scrollPaddingBottom"],
  size: ["width", "height"]
};
var scales = {
  color: "colors",
  background: "colors",
  backgroundColor: "colors",
  borderColor: "colors",
  caretColor: "colors",
  columnRuleColor: "colors",
  outlineColor: "colors",
  textDecorationColor: "colors",
  opacity: "opacities",
  transition: "transitions",
  margin: "space",
  marginTop: "space",
  marginRight: "space",
  marginBottom: "space",
  marginLeft: "space",
  marginX: "space",
  marginY: "space",
  marginBlock: "space",
  marginBlockEnd: "space",
  marginBlockStart: "space",
  marginInline: "space",
  marginInlineEnd: "space",
  marginInlineStart: "space",
  padding: "space",
  paddingTop: "space",
  paddingRight: "space",
  paddingBottom: "space",
  paddingLeft: "space",
  paddingX: "space",
  paddingY: "space",
  paddingBlock: "space",
  paddingBlockEnd: "space",
  paddingBlockStart: "space",
  paddingInline: "space",
  paddingInlineEnd: "space",
  paddingInlineStart: "space",
  scrollMargin: "space",
  scrollMarginTop: "space",
  scrollMarginRight: "space",
  scrollMarginBottom: "space",
  scrollMarginLeft: "space",
  scrollMarginX: "space",
  scrollMarginY: "space",
  scrollPadding: "space",
  scrollPaddingTop: "space",
  scrollPaddingRight: "space",
  scrollPaddingBottom: "space",
  scrollPaddingLeft: "space",
  scrollPaddingX: "space",
  scrollPaddingY: "space",
  inset: "space",
  insetBlock: "space",
  insetBlockEnd: "space",
  insetBlockStart: "space",
  insetInline: "space",
  insetInlineEnd: "space",
  insetInlineStart: "space",
  top: "space",
  right: "space",
  bottom: "space",
  left: "space",
  gridGap: "space",
  gridColumnGap: "space",
  gridRowGap: "space",
  gap: "space",
  columnGap: "space",
  rowGap: "space",
  fontFamily: "fonts",
  fontSize: "fontSizes",
  fontWeight: "fontWeights",
  lineHeight: "lineHeights",
  letterSpacing: "letterSpacings",
  border: "borders",
  borderTop: "borders",
  borderRight: "borders",
  borderBottom: "borders",
  borderLeft: "borders",
  borderWidth: "borderWidths",
  borderStyle: "borderStyles",
  borderRadius: "radii",
  borderTopRightRadius: "radii",
  borderTopLeftRadius: "radii",
  borderBottomRightRadius: "radii",
  borderBottomLeftRadius: "radii",
  borderTopWidth: "borderWidths",
  borderTopColor: "colors",
  borderTopStyle: "borderStyles",
  borderBottomWidth: "borderWidths",
  borderBottomColor: "colors",
  borderBottomStyle: "borderStyles",
  borderLeftWidth: "borderWidths",
  borderLeftColor: "colors",
  borderLeftStyle: "borderStyles",
  borderRightWidth: "borderWidths",
  borderRightColor: "colors",
  borderRightStyle: "borderStyles",
  borderBlock: "borders",
  borderBlockColor: "colors",
  borderBlockEnd: "borders",
  borderBlockEndColor: "colors",
  borderBlockEndStyle: "borderStyles",
  borderBlockEndWidth: "borderWidths",
  borderBlockStart: "borders",
  borderBlockStartColor: "colors",
  borderBlockStartStyle: "borderStyles",
  borderBlockStartWidth: "borderWidths",
  borderBlockStyle: "borderStyles",
  borderBlockWidth: "borderWidths",
  borderEndEndRadius: "radii",
  borderEndStartRadius: "radii",
  borderInline: "borders",
  borderInlineColor: "colors",
  borderInlineEnd: "borders",
  borderInlineEndColor: "colors",
  borderInlineEndStyle: "borderStyles",
  borderInlineEndWidth: "borderWidths",
  borderInlineStart: "borders",
  borderInlineStartColor: "colors",
  borderInlineStartStyle: "borderStyles",
  borderInlineStartWidth: "borderWidths",
  borderInlineStyle: "borderStyles",
  borderInlineWidth: "borderWidths",
  borderStartEndRadius: "radii",
  borderStartStartRadius: "radii",
  columnRuleWidth: "borderWidths",
  boxShadow: "shadows",
  textShadow: "shadows",
  zIndex: "zIndices",
  width: "sizes",
  minWidth: "sizes",
  maxWidth: "sizes",
  height: "sizes",
  minHeight: "sizes",
  maxHeight: "sizes",
  flexBasis: "sizes",
  size: "sizes",
  blockSize: "sizes",
  inlineSize: "sizes",
  maxBlockSize: "sizes",
  maxInlineSize: "sizes",
  minBlockSize: "sizes",
  minInlineSize: "sizes",
  columnWidth: "sizes",
  fill: "colors",
  stroke: "colors"
};
var positiveOrNegative = function positiveOrNegative2(scale, value) {
  if (typeof value !== "number" || value >= 0) {
    if (typeof value === "string" && value.startsWith("-")) {
      var valueWithoutMinus = value.substring(1);
      var _n = get(scale, valueWithoutMinus, valueWithoutMinus);
      if (typeof _n === "number") {
        return _n * -1;
      }
      return "-" + _n;
    }
    return get(scale, value, value);
  }
  var absolute = Math.abs(value);
  var n = get(scale, absolute, absolute);
  if (typeof n === "string")
    return "-" + n;
  return Number(n) * -1;
};
var transforms = ["margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginBlock", "marginBlockEnd", "marginBlockStart", "marginInline", "marginInlineEnd", "marginInlineStart", "top", "bottom", "left", "right"].reduce(function(acc, curr) {
  var _extends22;
  return _extends({}, acc, (_extends22 = {}, _extends22[curr] = positiveOrNegative, _extends22));
}, {});
var responsive = function responsive2(styles) {
  return function(theme) {
    var next = {};
    var breakpoints = theme && theme.breakpoints || defaultBreakpoints;
    var mediaQueries = [null].concat(breakpoints.map(function(n) {
      return n.includes("@media") ? n : "@media screen and (min-width: " + n + ")";
    }));
    for (var k in styles) {
      var key = k;
      var value = styles[key];
      if (typeof value === "function") {
        value = value(theme || {});
      }
      if (value === false || value == null) {
        continue;
      }
      if (!Array.isArray(value)) {
        next[key] = value;
        continue;
      }
      for (var i = 0; i < value.slice(0, mediaQueries.length).length; i++) {
        var media = mediaQueries[i];
        if (!media) {
          next[key] = value[i];
          continue;
        }
        next[media] = next[media] || {};
        if (value[i] == null)
          continue;
        next[media][key] = value[i];
      }
    }
    return next;
  };
};
var css = function css2(args) {
  if (args === void 0) {
    args = {};
  }
  return function(props) {
    if (props === void 0) {
      props = {};
    }
    var theme = _extends({}, defaultTheme, "theme" in props ? props.theme : props);
    var obj = getObjectWithVariants(typeof args === "function" ? args(theme) : args, theme);
    var styles = responsive(obj)(theme);
    var result = {};
    for (var key in styles) {
      var x = styles[key];
      var val = typeof x === "function" ? x(theme) : x;
      if (val && typeof val === "object") {
        if (hasDefault(val)) {
          result[key] = val[THEME_UI_DEFAULT_KEY];
          continue;
        }
        result[key] = css2(val)(theme);
        continue;
      }
      var prop = key in aliases ? aliases[key] : key;
      var scaleName = prop in scales ? scales[prop] : void 0;
      var scale = scaleName ? theme == null ? void 0 : theme[scaleName] : get(theme, prop, {});
      var transform = get(transforms, prop, get);
      var value = transform(scale, val, val);
      if (prop in multiples) {
        var dirs = multiples[prop];
        for (var i = 0; i < dirs.length; i++) {
          result[dirs[i]] = value;
        }
      } else {
        result[prop] = value;
      }
    }
    return result;
  };
};

// node_modules/@theme-ui/components/dist/theme-ui-components.esm.js
var import_react2 = __toESM(require_react());
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o[i++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var _excluded$g = ["__themeKey", "__css", "variant", "css", "sx", "as"];
var boxSystemProps = [
  "margin",
  "marginTop",
  "marginRight",
  "marginBottom",
  "marginLeft",
  "marginX",
  "marginY",
  "m",
  "mt",
  "mr",
  "mb",
  "ml",
  "mx",
  "my",
  "padding",
  "paddingTop",
  "paddingRight",
  "paddingBottom",
  "paddingLeft",
  "paddingX",
  "paddingY",
  "p",
  "pt",
  "pr",
  "pb",
  "pl",
  "px",
  "py",
  "color",
  "backgroundColor",
  "bg",
  "opacity"
];
var __isBoxStyledSystemProp = function __isBoxStyledSystemProp2(prop) {
  return boxSystemProps.includes(prop);
};
var pickSystemProps = function pickSystemProps2(props) {
  var res = {};
  for (var _iterator = _createForOfIteratorHelperLoose(boxSystemProps), _step; !(_step = _iterator()).done; ) {
    var key = _step.value;
    res[key] = props[key];
  }
  return res;
};
var Box$1 = (0, import_react2.forwardRef)(function Box(props, ref) {
  var theme = useTheme();
  var _ref = props, _ref$__themeKey = _ref.__themeKey, __themeKey = _ref$__themeKey === void 0 ? "variants" : _ref$__themeKey, __css = _ref.__css, variant = _ref.variant, cssProp = _ref.css, sx = _ref.sx, _ref$as = _ref.as, Component = _ref$as === void 0 ? "div" : _ref$as, rest = _objectWithoutPropertiesLoose(_ref, _excluded$g);
  var baseStyles = {
    boxSizing: "border-box",
    margin: 0,
    minWidth: 0
  };
  var __cssStyles = css(__css)(theme);
  var variantInTheme = get(theme, __themeKey + "." + variant) || get(theme, variant);
  var variantStyles = variantInTheme && css(variantInTheme)(theme);
  var sxPropStyles = css(sx)(theme);
  var systemPropsStyles = css(pickSystemProps(rest))(theme);
  var style = [baseStyles, __cssStyles, variantStyles, sxPropStyles, systemPropsStyles, cssProp];
  boxSystemProps.forEach(function(name) {
    delete rest[name];
  });
  return jsx(Component, _extends2({
    ref,
    css: style
  }, rest));
});
var Flex = import_react2.default.forwardRef(function Flex2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref
  }, props, {
    sx: _extends2({
      display: "flex"
    }, props.sx)
  }));
});
var getProps = function getProps2(test) {
  return function(props) {
    var next = {};
    for (var key in props) {
      if (test(key || ""))
        next[key] = props[key];
    }
    return next;
  };
};
var MRE = /^m[trblxy]?$/;
var getMargin = getProps(function(k) {
  return MRE.test(k);
});
var omitMargin = getProps(function(k) {
  return !MRE.test(k);
});
function __internalProps(props) {
  return props;
}
var _excluded$f = ["width", "columns", "gap", "repeat"];
var px = function px2(n) {
  return typeof n === "number" ? n + "px" : n;
};
var singleWidthToColumns = function singleWidthToColumns2(width, repeat) {
  return width ? "repeat(auto-" + repeat + ", minmax(" + px(width) + ", 1fr))" : null;
};
var widthToColumns = function widthToColumns2(width, repeat) {
  return Array.isArray(width) ? width.map(function(w) {
    return singleWidthToColumns(w, repeat);
  }) : singleWidthToColumns(width, repeat);
};
var singleCountToColumns = function singleCountToColumns2(n) {
  return n ? typeof n === "number" ? "repeat(" + n + ", 1fr)" : n : null;
};
var countToColumns = function countToColumns2(n) {
  return Array.isArray(n) ? n.map(singleCountToColumns) : singleCountToColumns(n);
};
var Grid = import_react2.default.forwardRef(function Grid2(_ref, ref) {
  var width = _ref.width, columns = _ref.columns, _ref$gap = _ref.gap, gap = _ref$gap === void 0 ? 3 : _ref$gap, _ref$repeat = _ref.repeat, repeat = _ref$repeat === void 0 ? "fit" : _ref$repeat, props = _objectWithoutPropertiesLoose(_ref, _excluded$f);
  var gridTemplateColumns = !!width ? widthToColumns(width, repeat) : countToColumns(columns);
  var __css = {
    display: "grid",
    gridGap: gap,
    gridTemplateColumns
  };
  return import_react2.default.createElement(Box$1, _extends2({
    ref
  }, props, __internalProps({
    __themeKey: "grids",
    __css
  })));
});
var Box2 = Box$1;
var Button = import_react2.default.forwardRef(function Button2(props, ref) {
  return import_react2.default.createElement(Box2, _extends2({
    ref,
    as: "button",
    variant: "primary"
  }, props, __internalProps({
    __themeKey: "buttons",
    __css: {
      appearance: "none",
      display: props.hidden ? void 0 : "inline-block",
      textAlign: "center",
      lineHeight: "inherit",
      textDecoration: "none",
      fontSize: "inherit",
      px: 3,
      py: 2,
      color: "white",
      bg: "primary",
      border: 0,
      borderRadius: 4
    }
  })));
});
var Link = import_react2.default.forwardRef(function Link2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "a",
    variant: "styles.a"
  }, props, __internalProps({
    __themeKey: "links"
  })));
});
var Paragraph = import_react2.default.forwardRef(function Paragraph2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "p",
    variant: "paragraph"
  }, props, __internalProps({
    __themeKey: "text",
    __css: {
      fontFamily: "body",
      fontWeight: "body",
      lineHeight: "body"
    }
  })));
});
var Text = import_react2.default.forwardRef(function Text2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    as: "span",
    ref,
    variant: "default"
  }, props, __internalProps({
    __themeKey: "text"
  })));
});
var Heading = import_react2.default.forwardRef(function Heading2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "h2",
    variant: "heading"
  }, props, __internalProps({
    __themeKey: "text",
    __css: {
      fontFamily: "heading",
      fontWeight: "heading",
      lineHeight: "heading"
    }
  })));
});
var Image = import_react2.default.forwardRef(function Image2(props, ref) {
  var __outerCss = props.__css;
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "img"
  }, props, __internalProps({
    __themeKey: "images",
    __css: _extends2({
      maxWidth: "100%",
      height: "auto"
    }, __outerCss)
  })));
});
var Card = import_react2.default.forwardRef(function Card2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    variant: "primary"
  }, props, __internalProps({
    __themeKey: "cards"
  })));
});
var Label = import_react2.default.forwardRef(function Label2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "label",
    variant: "label"
  }, props, __internalProps({
    __themeKey: "forms",
    __css: {
      width: "100%",
      display: "flex"
    }
  })));
});
var _excluded$e = ["sx", "autofillBackgroundColor"];
var autofillStyles = {
  boxShadow: "inset 0 0 0 1000px var(--theme-ui-input-autofill-bg)",
  fontSize: "inherit",
  ":first-line": {
    fontSize: "1rem"
  }
};
var defaultInputStyles = {
  display: "block",
  width: "100%",
  p: 2,
  appearance: "none",
  fontSize: "inherit",
  lineHeight: "inherit",
  border: "1px solid",
  borderRadius: 4,
  color: "inherit",
  bg: "transparent",
  ":autofill, :autofill:hover, :autofill:focus": autofillStyles,
  ":-webkit-autofill, :-webkit-autofill:hover, :-webkit-autofill:focus": autofillStyles
};
var Input = import_react2.default.forwardRef(function Input2(_ref, ref) {
  var sx = _ref.sx, _ref$autofillBackgrou = _ref.autofillBackgroundColor, autofillBackgroundColor = _ref$autofillBackgrou === void 0 ? "background" : _ref$autofillBackgrou, rest = _objectWithoutPropertiesLoose(_ref, _excluded$e);
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "input",
    variant: "input",
    sx: _extends2({
      "--theme-ui-input-autofill-bg": function themeUiInputAutofillBg(theme) {
        return theme.colors && get(theme.colors, autofillBackgroundColor, null);
      }
    }, sx)
  }, rest, __internalProps({
    __themeKey: "forms",
    __css: defaultInputStyles
  })));
});
var _excluded$d = ["size"];
var SVG = import_react2.default.forwardRef(function SVG2(_ref, ref) {
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 24 : _ref$size, rest = _objectWithoutPropertiesLoose(_ref, _excluded$d);
  var svgProps = _extends2({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "currentcolor"
  }, rest);
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "svg"
  }, svgProps));
});
SVG.displayName = "SVG";
var _excluded$c = ["arrow"];
var DownArrow = function DownArrow2(props) {
  return import_react2.default.createElement(SVG, props, import_react2.default.createElement("path", {
    d: "M7 10l5 5 5-5z"
  }));
};
var Select = import_react2.default.forwardRef(function Select2(_ref, ref) {
  var arrow = _ref.arrow, props = _objectWithoutPropertiesLoose(_ref, _excluded$c);
  var __css = {
    display: "block",
    width: "100%",
    p: 2,
    paddingRight: 4,
    appearance: "none",
    fontSize: "inherit",
    lineHeight: "inherit",
    border: "1px solid",
    borderRadius: 4,
    color: "inherit",
    backgroundColor: function backgroundColor(theme) {
      return get(theme, "colors.background", null);
    }
  };
  return import_react2.default.createElement(Box$1, _extends2({}, getMargin(props), {
    sx: {
      display: "flex"
    }
  }), import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "select",
    variant: "select"
  }, omitMargin(props), __internalProps({
    __themeKey: "forms",
    __css
  }))), arrow || import_react2.default.createElement(DownArrow, {
    sx: {
      ml: -28,
      alignSelf: "center",
      pointerEvents: "none"
    }
  }));
});
var Textarea = import_react2.default.forwardRef(function Textarea2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "textarea",
    variant: "textarea"
  }, props, __internalProps({
    __themeKey: "forms",
    __css: {
      display: "block",
      width: "100%",
      p: 2,
      appearance: "none",
      fontSize: "inherit",
      lineHeight: "inherit",
      border: "1px solid",
      borderRadius: 4,
      color: "inherit",
      bg: "transparent"
    }
  })));
});
var _excluded$b = ["className", "sx", "variant"];
var RadioChecked = function RadioChecked2(props) {
  return import_react2.default.createElement(SVG, props, import_react2.default.createElement("path", {
    d: "M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }));
};
var RadioUnchecked = function RadioUnchecked2(props) {
  return import_react2.default.createElement(SVG, props, import_react2.default.createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }));
};
var RadioIcon = function RadioIcon2(props) {
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(RadioChecked, _extends2({}, props, __internalProps({
    __css: {
      display: "none",
      "input:checked ~ &": {
        display: "block"
      }
    }
  }))), import_react2.default.createElement(RadioUnchecked, _extends2({}, props, __internalProps({
    __css: {
      display: "block",
      "input:checked ~ &": {
        display: "none"
      }
    }
  }))));
};
var Radio = import_react2.default.forwardRef(function Radio2(_ref, ref) {
  var className = _ref.className, sx = _ref.sx, _ref$variant = _ref.variant, variant = _ref$variant === void 0 ? "radio" : _ref$variant, props = _objectWithoutPropertiesLoose(_ref, _excluded$b);
  return import_react2.default.createElement(Box$1, {
    sx: {
      minWidth: "min-content"
    }
  }, import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "input",
    type: "radio"
  }, props, {
    sx: {
      position: "absolute",
      opacity: 0,
      zIndex: -1,
      width: 1,
      height: 1,
      overflow: "hidden"
    }
  })), import_react2.default.createElement(Box$1, _extends2({
    as: RadioIcon,
    "aria-hidden": "true",
    variant,
    className,
    sx
  }, __internalProps({
    __themeKey: "forms",
    __css: {
      mr: 2,
      borderRadius: 9999,
      color: "gray",
      flexShrink: 0,
      "input:checked ~ &": {
        color: "primary"
      },
      "input:focus ~ &": {
        bg: "highlight"
      }
    }
  }))));
});
var _excluded$a = ["className", "sx", "variant", "children"];
var CheckboxChecked = function CheckboxChecked2(props) {
  return import_react2.default.createElement(SVG, props, import_react2.default.createElement("path", {
    d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
  }));
};
var CheckboxUnchecked = function CheckboxUnchecked2(props) {
  return import_react2.default.createElement(SVG, props, import_react2.default.createElement("path", {
    d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
  }));
};
var CheckboxIcon = function CheckboxIcon2(props) {
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(CheckboxChecked, _extends2({}, props, __internalProps({
    __css: {
      display: "none",
      "input:checked ~ &": {
        display: "block"
      }
    }
  }))), import_react2.default.createElement(CheckboxUnchecked, _extends2({}, props, __internalProps({
    __css: {
      display: "block",
      "input:checked ~ &": {
        display: "none"
      }
    }
  }))));
};
var Checkbox = import_react2.default.forwardRef(function Checkbox2(_ref, ref) {
  var className = _ref.className, sx = _ref.sx, _ref$variant = _ref.variant, variant = _ref$variant === void 0 ? "checkbox" : _ref$variant, children = _ref.children, props = _objectWithoutPropertiesLoose(_ref, _excluded$a);
  return import_react2.default.createElement(Box$1, {
    sx: {
      minWidth: "min-content"
    }
  }, import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "input",
    type: "checkbox"
  }, props, {
    sx: {
      position: "absolute",
      opacity: 0,
      zIndex: -1,
      width: 1,
      height: 1,
      overflow: "hidden"
    }
  })), import_react2.default.createElement(Box$1, _extends2({
    as: CheckboxIcon,
    "aria-hidden": "true",
    variant,
    className,
    sx
  }, __internalProps({
    __themeKey: "forms",
    __css: {
      mr: 2,
      borderRadius: 4,
      color: "gray",
      flexShrink: 0,
      "input:checked ~ &": {
        color: "primary"
      },
      "input:focus ~ &": {
        color: "primary",
        bg: "highlight"
      }
    }
  }))), children);
});
var _excluded$9 = ["className", "label", "sx", "variant"];
var GUTTER = 2;
var SIZE = 18;
var Switch = import_react2.default.forwardRef(function Switch2(_ref, ref) {
  var className = _ref.className, label = _ref.label, sx = _ref.sx, _ref$variant = _ref.variant, variant = _ref$variant === void 0 ? "switch" : _ref$variant, rest = _objectWithoutPropertiesLoose(_ref, _excluded$9);
  var __css = {
    position: "relative",
    flexShrink: 0,
    bg: "gray",
    borderRadius: SIZE,
    height: SIZE + GUTTER * 2,
    width: SIZE * 2 + GUTTER * 2,
    mr: 2,
    "input:disabled ~ &": {
      opacity: 0.5,
      cursor: "not-allowed"
    },
    "& > div": {
      display: "flex",
      alignItems: "center",
      borderRadius: "50%",
      height: SIZE,
      width: SIZE,
      bg: "white",
      boxShadow: "0 1px 2px rgba(0, 0, 0, 0.1)",
      position: "relative",
      transform: "translateX(0%)",
      transition: "transform 240ms cubic-bezier(0.165, 0.840, 0.440, 1.000)"
    },
    "input:checked ~ &": {
      bg: "primary",
      "> div": {
        transform: "translateX(100%)"
      }
    }
  };
  return import_react2.default.createElement(Label, {
    sx: {
      cursor: "pointer"
    }
  }, import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "input",
    type: "checkbox",
    "aria-label": label
  }, rest, {
    sx: {
      position: "absolute",
      opacity: 0,
      zIndex: -1,
      width: 1,
      height: 1,
      overflow: "hidden"
    }
  }, __internalProps({
    __themeKey: "forms"
  }))), import_react2.default.createElement(Box$1, _extends2({
    css: {
      padding: GUTTER
    },
    variant,
    className,
    sx
  }, __internalProps({
    __themeKey: "forms",
    __css
  })), import_react2.default.createElement(Box$1, null)), import_react2.default.createElement("span", null, label));
});
var thumbStyle = {
  appearance: "none",
  width: 16,
  height: 16,
  bg: "currentcolor",
  border: 0,
  borderRadius: 9999,
  variant: "forms.slider.thumb"
};
var sliderStyle = {
  display: "block",
  width: "100%",
  height: 4,
  my: 2,
  cursor: "pointer",
  appearance: "none",
  borderRadius: 9999,
  color: "inherit",
  bg: "gray",
  ":focus": {
    outline: "none",
    color: "primary"
  },
  "&::-webkit-slider-thumb": thumbStyle,
  "&::-moz-range-thumb": thumbStyle,
  "&::-ms-thumb": thumbStyle
};
var Slider = import_react2.default.forwardRef(function Slider2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "input",
    type: "range",
    variant: "slider"
  }, props, __internalProps({
    __themeKey: "forms",
    __css: sliderStyle
  })));
});
var _excluded$8 = ["as", "label", "id", "name"];
var Field = import_react2.default.forwardRef(function Field2(_ref, ref) {
  var _ref$as = _ref.as, Control = _ref$as === void 0 ? Input : _ref$as, label = _ref.label, id = _ref.id, name = _ref.name, rest = _objectWithoutPropertiesLoose(_ref, _excluded$8);
  var fieldIdentifier = id || name;
  var controlProps = _extends2({
    ref,
    name,
    id: fieldIdentifier
  }, omitMargin(rest));
  return import_react2.default.createElement(Box$1, getMargin(rest), import_react2.default.createElement(Label, {
    htmlFor: fieldIdentifier
  }, label), import_react2.default.createElement(Control, controlProps));
});
var Progress = import_react2.default.forwardRef(function Progress2(props, ref) {
  var __css = {
    display: "block",
    width: "100%",
    height: "4px",
    margin: 0,
    padding: 0,
    overflow: "hidden",
    appearance: "none",
    color: "primary",
    bg: "gray",
    borderRadius: 9999,
    border: "none",
    "&::-webkit-progress-bar": {
      bg: "transparent"
    },
    "&::-webkit-progress-value": {
      bg: "currentcolor"
    },
    "&::-moz-progress-bar": {
      bg: "currentcolor"
    }
  };
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "progress",
    variant: "styles.progress"
  }, props, __internalProps({
    __css
  })));
});
var _excluded$7 = ["size", "strokeWidth", "value", "min", "max", "title"];
var Donut = import_react2.default.forwardRef(function Donut2(_ref, ref) {
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 128 : _ref$size, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 2 : _ref$strokeWidth, _ref$value = _ref.value, value = _ref$value === void 0 ? 0 : _ref$value, _ref$min = _ref.min, min = _ref$min === void 0 ? 0 : _ref$min, _ref$max = _ref.max, max = _ref$max === void 0 ? 1 : _ref$max, title = _ref.title, props = _objectWithoutPropertiesLoose(_ref, _excluded$7);
  var r = 16 - (typeof strokeWidth === "number" ? strokeWidth : parseFloat(strokeWidth));
  var C = 2 * r * Math.PI;
  var offset = C - (value - min) / (max - min) * C;
  var svgProps = {
    strokeWidth,
    viewBox: "0 0 32 32",
    width: size,
    height: size,
    fill: "none",
    stroke: "currentcolor"
  };
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "svg",
    role: "img",
    "aria-valuenow": value,
    "aria-valuemin": min,
    "aria-valuemax": max
  }, svgProps, props, __internalProps({
    __css: {
      color: "primary"
    }
  })), title && import_react2.default.createElement("title", null, title), import_react2.default.createElement("circle", {
    cx: 16,
    cy: 16,
    r,
    opacity: 1 / 8
  }), import_react2.default.createElement("circle", {
    cx: 16,
    cy: 16,
    r,
    strokeDasharray: C,
    strokeDashoffset: offset,
    transform: "rotate(-90 16 16)"
  }));
});
var _excluded$6 = ["size", "strokeWidth", "max", "title", "duration"];
var spin = keyframes({
  from: {
    transform: "rotate(0deg)"
  },
  to: {
    transform: "rotate(360deg)"
  }
});
var Spinner = import_react2.default.forwardRef(function Spinner2(_ref, ref) {
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 48 : _ref$size, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 4 : _ref$strokeWidth;
  _ref.max;
  var _ref$title = _ref.title, title = _ref$title === void 0 ? "Loading..." : _ref$title, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? 500 : _ref$duration, props = _objectWithoutPropertiesLoose(_ref, _excluded$6);
  var r = 16 - strokeWidth;
  var C = 2 * r * Math.PI;
  var offset = C - 1 / 4 * C;
  var __css = {
    color: "primary",
    overflow: "visible"
  };
  var circleProps = {
    cx: 16,
    cy: 16,
    r,
    strokeDasharray: C,
    strokeDashoffset: offset
  };
  var __circleCss = {
    transformOrigin: "50% 50%",
    animationName: spin.toString(),
    animationTimingFunction: "linear",
    animationDuration: duration + "ms",
    animationIterationCount: "infinite"
  };
  var svgProps = {
    strokeWidth,
    viewBox: "0 0 32 32",
    width: size,
    height: size,
    fill: "none",
    stroke: "currentColor",
    role: "img"
  };
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "svg"
  }, svgProps, props, __internalProps({
    __css
  })), import_react2.default.createElement("title", null, title), import_react2.default.createElement("circle", {
    cx: 16,
    cy: 16,
    r,
    opacity: 1 / 8
  }), import_react2.default.createElement(Box$1, _extends2({
    as: "circle"
  }, circleProps, __internalProps({
    __css: __circleCss
  }))));
});
var _excluded$5 = ["size"];
var Avatar = import_react2.default.forwardRef(function Avatar2(_ref, ref) {
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 48 : _ref$size, props = _objectWithoutPropertiesLoose(_ref, _excluded$5);
  return import_react2.default.createElement(Image, _extends2({
    ref,
    width: size,
    height: size,
    variant: "avatar"
  }, props, __internalProps({
    __css: {
      borderRadius: 9999
    }
  })));
});
var Badge = import_react2.default.forwardRef(function Badge2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    variant: "primary"
  }, props, __internalProps({
    __themeKey: "badges",
    __css: {
      display: "inline-block",
      verticalAlign: "baseline",
      fontSize: 0,
      fontWeight: "bold",
      whiteSpace: "nowrap",
      px: 1,
      borderRadius: 2,
      color: "white",
      bg: "primary"
    }
  })));
});
var _excluded$4 = ["size"];
var IconButton = import_react2.default.forwardRef(function IconButton2(_ref, ref) {
  var _css;
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 32 : _ref$size, props = _objectWithoutPropertiesLoose(_ref, _excluded$4);
  var emotionCssLabel = ((_css = props.__css) == null ? void 0 : _css.label) || "IconButton";
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "button",
    variant: "icon"
  }, props, __internalProps({
    __themeKey: "buttons",
    __css: {
      label: emotionCssLabel,
      appearance: "none",
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      padding: 1,
      width: size,
      height: size,
      color: "inherit",
      bg: "transparent",
      border: "none",
      borderRadius: 4
    }
  })));
});
var _excluded$3 = ["size"];
var CloseIcon = import_react2.default.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentColor",
  viewBox: "0 0 24 24"
}, import_react2.default.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}));
var Close = import_react2.default.forwardRef(function Close2(_ref, ref) {
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 32 : _ref$size, props = _objectWithoutPropertiesLoose(_ref, _excluded$3);
  return import_react2.default.createElement(IconButton, _extends2({
    ref,
    size,
    title: "Close",
    "aria-label": "Close",
    variant: "close"
  }, props, {
    children: CloseIcon
  }));
});
var Alert = import_react2.default.forwardRef(function Alert2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    variant: "primary"
  }, props, __internalProps({
    __themeKey: "alerts",
    __css: {
      display: "flex",
      alignItems: "center",
      px: 3,
      py: 2,
      fontWeight: "bold",
      color: "white",
      bg: "primary",
      borderRadius: 4
    }
  })));
});
var Divider = import_react2.default.forwardRef(function Divider2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "hr",
    variant: "styles.hr"
  }, props, __internalProps({
    __css: {
      color: "gray",
      m: 0,
      my: 2,
      border: 0,
      borderBottom: "1px solid"
    }
  })));
});
var _excluded$2 = ["variant", "sx", "ratio", "src", "frameBorder", "allowFullScreen", "width", "height", "allow"];
var getContainerProps = getProps(__isBoxStyledSystemProp);
var getIframeProps = getProps(function(str) {
  return !__isBoxStyledSystemProp(str);
});
var Embed = import_react2.default.forwardRef(function Embed2(_ref, ref) {
  var variant = _ref.variant, sx = _ref.sx, _ref$ratio = _ref.ratio, ratio = _ref$ratio === void 0 ? 16 / 9 : _ref$ratio, src = _ref.src, _ref$frameBorder = _ref.frameBorder, frameBorder = _ref$frameBorder === void 0 ? 0 : _ref$frameBorder, _ref$allowFullScreen = _ref.allowFullScreen, allowFullScreen = _ref$allowFullScreen === void 0 ? true : _ref$allowFullScreen, _ref$width = _ref.width, width = _ref$width === void 0 ? 560 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? 315 : _ref$height, allow = _ref.allow, rest = _objectWithoutPropertiesLoose(_ref, _excluded$2);
  var iframeProps = _extends2({
    src,
    width,
    height,
    frameBorder,
    allowFullScreen,
    allow
  }, getIframeProps(rest));
  return import_react2.default.createElement(Box$1, _extends2({
    variant,
    sx
  }, getContainerProps(rest), __internalProps({
    __css: {
      width: "100%",
      height: 0,
      paddingBottom: 100 / ratio + "%",
      position: "relative",
      overflow: "hidden"
    }
  })), import_react2.default.createElement(Box$1, _extends2({
    ref,
    as: "iframe"
  }, iframeProps, __internalProps({
    __css: {
      position: "absolute",
      width: "100%",
      height: "100%",
      top: 0,
      bottom: 0,
      left: 0,
      border: 0
    }
  }))));
});
var _excluded$1 = ["ratio", "children"];
var AspectRatio = import_react2.default.forwardRef(function AspectRatio2(_ref, ref) {
  var _ref$ratio = _ref.ratio, ratio = _ref$ratio === void 0 ? 4 / 3 : _ref$ratio, children = _ref.children, props = _objectWithoutPropertiesLoose(_ref, _excluded$1);
  return import_react2.default.createElement(Box$1, {
    ref,
    sx: {
      position: "relative",
      overflow: "hidden"
    }
  }, import_react2.default.createElement(Box$1, {
    sx: {
      width: "100%",
      height: 0,
      paddingBottom: 100 / ratio + "%"
    }
  }), import_react2.default.createElement(Box$1, _extends2({}, props, __internalProps({
    __css: {
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }
  })), children));
});
var _excluded = ["ratio"];
var AspectImage = import_react2.default.forwardRef(function AspectImage2(_ref, ref) {
  var ratio = _ref.ratio, props = _objectWithoutPropertiesLoose(_ref, _excluded);
  return import_react2.default.createElement(AspectRatio, {
    ratio
  }, import_react2.default.createElement(Image, _extends2({
    ref
  }, props, __internalProps({
    __css: {
      objectFit: "cover"
    }
  }))));
});
var Container = import_react2.default.forwardRef(function Container2(props, ref) {
  return import_react2.default.createElement(Box$1, _extends2({
    ref,
    variant: "container"
  }, props, __internalProps({
    __themeKey: "layout",
    __css: {
      width: "100%",
      maxWidth: "container",
      mx: "auto"
    }
  })));
});
var NavLink = import_react2.default.forwardRef(function NavLink2(props, ref) {
  var __css = {
    color: "inherit",
    textDecoration: "none",
    fontWeight: "bold",
    display: "inline-block",
    "&:hover, &:focus, &.active": {
      color: "primary"
    }
  };
  return import_react2.default.createElement(Link, _extends2({
    ref,
    variant: "nav"
  }, props, __internalProps({
    __css
  })));
});
var Message = import_react2.default.forwardRef(function Message2(props, ref) {
  var __css = {
    padding: 3,
    paddingLeft: function paddingLeft(t) {
      return t.space && Number(t.space[3]) - Number(t.space[1]);
    },
    borderLeftWidth: function borderLeftWidth(t) {
      return t.space && Number(t.space[1]);
    },
    borderLeftStyle: "solid",
    borderLeftColor: "primary",
    borderRadius: 4,
    bg: "highlight"
  };
  return import_react2.default.createElement(Box$1, _extends2({
    ref
  }, props, __internalProps({
    __themeKey: "messages",
    __css
  })));
});
var MenuIcon = function MenuIcon2(_ref) {
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 24 : _ref$size;
  return jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: size,
    height: size,
    fill: "currentColor",
    css: {
      display: "block",
      margin: 0,
      boxSizing: "border-box",
      minWidth: 0
    }
  }, jsx("path", {
    d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
  }));
};
var MenuButton = import_react2.default.forwardRef(function MenuButton2(props, ref) {
  return jsx(IconButton, _extends2({
    ref,
    title: "Menu",
    "aria-label": "Toggle Menu",
    variant: "menu"
  }, props), jsx(MenuIcon, null));
});

export {
  get,
  css,
  __isBoxStyledSystemProp,
  Box$1,
  Flex,
  Grid,
  Button,
  Link,
  Paragraph,
  Text,
  Heading,
  Image,
  Card,
  Label,
  Input,
  Select,
  Textarea,
  Radio,
  Checkbox,
  Switch,
  Slider,
  Field,
  Progress,
  Donut,
  Spinner,
  Avatar,
  Badge,
  IconButton,
  CloseIcon,
  Close,
  Alert,
  Divider,
  Embed,
  AspectRatio,
  AspectImage,
  Container,
  NavLink,
  Message,
  MenuIcon,
  MenuButton
};
//# sourceMappingURL=chunk-TFJTC4OP.js.map
